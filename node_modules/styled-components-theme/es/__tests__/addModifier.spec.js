import expect from 'expect';
import Color from 'color';
import addModifer from '../addModifier';
import methods from '../colorMethods';

var selector = function selector() {
  return new Color('#2A2A2A').toString();
};

var testModifier = function testModifier(modifier) {
  var _ref;

  for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    args[_key - 1] = arguments[_key];
  }

  var modified = addModifer.apply(undefined, [selector, modifier].concat(args));
  expect(modified).toBeA('function');
  expect(modified()).toEqual((_ref = new Color(selector()))[modifier].apply(_ref, args).toString());
};

describe('addModifier', function () {
  methods.forEach(function (method) {
    it('adds a ' + method + ' modifier function', function () {
      testModifier(method, 0.1);
      testModifier(method, 0.5);
      testModifier(method, 0.9);
    });
  });
});