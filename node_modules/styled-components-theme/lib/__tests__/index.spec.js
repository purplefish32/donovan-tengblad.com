'use strict';

var _expect = require('expect');

var _expect2 = _interopRequireDefault(_expect);

var _color = require('color');

var _color2 = _interopRequireDefault(_color);

var _index = require('../index');

var _index2 = _interopRequireDefault(_index);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

describe('makeTheme', function () {
  it('adds takes a theme of colors and generates selectors', function () {
    var colors = {
      gray: '#2A2A2A',
      red: '#9B1919'
    };
    var theme = _index2.default.apply(undefined, _toConsumableArray(Object.keys(colors)));

    var graySelector = theme.gray;
    (0, _expect2.default)(graySelector).toBeA('function');
    (0, _expect2.default)(graySelector.length).toBe(1 // takes one argument (props)

    );var redSelector = theme.red;
    (0, _expect2.default)(redSelector).toBeA('function');
    (0, _expect2.default)(redSelector.length).toBe(1 // takes one argument (props)

    );var themeFromProvider = {
      theme: {
        gray: '#2A2A2A',
        red: '#9B1919'
      }
    };

    (0, _expect2.default)(graySelector(themeFromProvider)).toBe(colors.gray);
    (0, _expect2.default)(redSelector(themeFromProvider)).toBe(colors.red);

    var lighterGray = graySelector.lighten(0.4);
    var darkerRed = redSelector.darken(0.1);

    (0, _expect2.default)(lighterGray(themeFromProvider)).toBe(new _color2.default(colors.gray).lighten(0.4).toString());
    (0, _expect2.default)(darkerRed(themeFromProvider)).toBe(new _color2.default(colors.red).darken(0.1).toString());
  });
});