'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _colorMethods = require('./colorMethods');

var _colorMethods2 = _interopRequireDefault(_colorMethods);

var _addModifier = require('./addModifier');

var _addModifier2 = _interopRequireDefault(_addModifier);

var _aliases = require('./aliases');

var _aliases2 = _interopRequireDefault(_aliases);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Add useful methods directly to selector function, as well as put an toString() call at the end
 * @param selector
 */
var decorateSelector = function decorateSelector(selector) {
  // add member functions to our selector
  _colorMethods2.default.forEach(function (method) {
    selector[method] = function () {
      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      return decorateSelector(_addModifier2.default.apply(undefined, [selector, method].concat(args)));
    };
  }
  // add aliases
  );Object.keys(_aliases2.default).forEach(function (method) {
    return _aliases2.default[method].forEach(function (alias) {
      return selector[alias] = function () {
        /* istanbul ignore else */
        if (process.env.NODE_ENV !== 'production' && typeof console !== 'undefined') {
          console.warn(alias + '() is deprecated. Use ' + method + '() instead.');
        }
        return selector[method].apply(selector, arguments);
      };
    });
  });
  return selector;
};

exports.default = decorateSelector;