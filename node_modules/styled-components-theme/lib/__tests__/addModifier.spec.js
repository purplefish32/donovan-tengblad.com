'use strict';

var _expect = require('expect');

var _expect2 = _interopRequireDefault(_expect);

var _color = require('color');

var _color2 = _interopRequireDefault(_color);

var _addModifier = require('../addModifier');

var _addModifier2 = _interopRequireDefault(_addModifier);

var _colorMethods = require('../colorMethods');

var _colorMethods2 = _interopRequireDefault(_colorMethods);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var selector = function selector() {
  return new _color2.default('#2A2A2A').toString();
};

var testModifier = function testModifier(modifier) {
  var _ref;

  for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    args[_key - 1] = arguments[_key];
  }

  var modified = _addModifier2.default.apply(undefined, [selector, modifier].concat(args));
  (0, _expect2.default)(modified).toBeA('function');
  (0, _expect2.default)(modified()).toEqual((_ref = new _color2.default(selector()))[modifier].apply(_ref, args).toString());
};

describe('addModifier', function () {
  _colorMethods2.default.forEach(function (method) {
    it('adds a ' + method + ' modifier function', function () {
      testModifier(method, 0.1);
      testModifier(method, 0.5);
      testModifier(method, 0.9);
    });
  });
});