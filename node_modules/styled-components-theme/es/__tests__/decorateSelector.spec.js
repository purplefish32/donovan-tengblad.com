import expect from 'expect';
import Color from 'color';
import decorateSelector from '../decorateSelector';
import colorMethods from '../colorMethods';
import aliases from '../aliases';

var testHasAllMethods = function testHasAllMethods(selector) {
  return colorMethods.forEach(function (method) {
    return expect(selector[method]).toBeA('function');
  });
};

describe('decorateSelector', function () {
  colorMethods.forEach(function (method) {
    it('adds ' + method + ' method', function () {
      var selector = function selector() {
        return new Color('#2A2A2A').toString();
      };
      decorateSelector(selector);
      expect(selector[method]).toBeA('function');
      testHasAllMethods(selector[method]());
    });
  });
  Object.keys(aliases).forEach(function (method) {
    aliases[method].forEach(function (alias) {
      it('adds ' + alias + ' alias for ' + method, function () {
        var selector = function selector() {
          return new Color('#2A2A2A').toString();
        };
        decorateSelector(selector);
        expect(selector[alias]).toBeA('function');
        testHasAllMethods(selector[alias]());
      });
    });
  });
});