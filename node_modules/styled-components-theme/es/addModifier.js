import Color from 'color';

/**
 * Takes a selector that returns a color string and returns new decorated selector that calls the
 * original function to get the color and then modifies that color, ultimately returning another
 * color string.
 */
var addModifier = function addModifier(fn, method) {
  for (var _len = arguments.length, modifierArgs = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
    modifierArgs[_key - 2] = arguments[_key];
  }

  return function () {
    var _ref;

    return (_ref = new Color(fn.apply(undefined, arguments)))[method].apply(_ref, modifierArgs).toString();
  };
};

export default addModifier;