'use strict';

var _expect = require('expect');

var _expect2 = _interopRequireDefault(_expect);

var _color = require('color');

var _color2 = _interopRequireDefault(_color);

var _decorateSelector = require('../decorateSelector');

var _decorateSelector2 = _interopRequireDefault(_decorateSelector);

var _colorMethods = require('../colorMethods');

var _colorMethods2 = _interopRequireDefault(_colorMethods);

var _aliases = require('../aliases');

var _aliases2 = _interopRequireDefault(_aliases);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var testHasAllMethods = function testHasAllMethods(selector) {
  return _colorMethods2.default.forEach(function (method) {
    return (0, _expect2.default)(selector[method]).toBeA('function');
  });
};

describe('decorateSelector', function () {
  _colorMethods2.default.forEach(function (method) {
    it('adds ' + method + ' method', function () {
      var selector = function selector() {
        return new _color2.default('#2A2A2A').toString();
      };
      (0, _decorateSelector2.default)(selector);
      (0, _expect2.default)(selector[method]).toBeA('function');
      testHasAllMethods(selector[method]());
    });
  });
  Object.keys(_aliases2.default).forEach(function (method) {
    _aliases2.default[method].forEach(function (alias) {
      it('adds ' + alias + ' alias for ' + method, function () {
        var selector = function selector() {
          return new _color2.default('#2A2A2A').toString();
        };
        (0, _decorateSelector2.default)(selector);
        (0, _expect2.default)(selector[alias]).toBeA('function');
        testHasAllMethods(selector[alias]());
      });
    });
  });
});